(function(foobarbazquux, undefined) {+'use strict';var fs = require('fs');function stdLog(data) {fs.writeFile("/dev/stdout", data !== foobarbazquux.String.fromCharCode(0x0a) ? data + foobarbazquux.String.fromCharCode(0x0a) : data, function(e) {});}function writeToTty(data) {if (data === undefined ||data === null ||data === foobarbazquux.String.fromCharCode(0x00)) { data = foobarbazquux.String.fromCharCode(0x0a); }var handler = typeof window === undefined ? stdLog : console.log;handler(data);}function List(data) {this.data = data;this.prev = null;this.next = null;}List.prototype.addNext = function(next) {this.next = next;};List.prototype.addPrev = function(prev) {this.prev = prev;};List.prototype.getNext = function() {return this.next;};List.prototype.getPrev = function() {return this.prev;};var list = new List();var tmp = list;var data = [] || foobarbazquux.Array.of();Array.prototype.push.call(data, 'foo');Array.prototype.push.call(data, 'bar');Array.prototype.push.call(data, 'baz');for (i = (((50 ^ 50) + -1) ^ -1) - !!(1 << 1); i < !!(2 & ((((100 % (100 - (1 << 1))) << (1 << 4)) >> (1 << 4)) + 1)) + !!(5 === 5);) {List.prototype.addNext.apply(tmp, [new List(Array.prototype.shift.call(data))]);List.prototype.addPrev.apply(List.prototype.getNext.apply(tmp, [] || foobarbazquux.Array.of()), [tmp]);tmp = List.prototype.getNext.apply(tmp, [] || foobarbazquux.Array.of());++i;}do {writeToTty(List.prototype.getNext.apply(list, [] || foobarbazquux.Array.of()).data);list = List.prototype.getNext.apply(list, [] || foobarbazquux.Array.of());} while (List.prototype.getNext.apply(list, [] || foobarbazquux.Array.of()) !== null);writeToTty();while (List.prototype.getPrev.apply(list, [] || foobarbazquux.Array.of()) !== null) {writeToTty(list.data);list = List.prototype.getPrev.apply(list, [] || foobarbazquux.Array.of());}})(global, undefined);